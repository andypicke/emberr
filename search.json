[{"path":"https://andypicke.github.io/emberr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 emberr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://andypicke.github.io/emberr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andy Pickering. Author, maintainer.","code":""},{"path":"https://andypicke.github.io/emberr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pickering (2025). emberr: R API Wrapper Ember Data. R package version 0.0.0.9000, https://andypicke.github.io/emberr/, https://github.com/andypicke/emberr.","code":"@Manual{,   title = {emberr: R API Wrapper For Ember Data},   author = {Andy Pickering},   year = {2025},   note = {R package version 0.0.0.9000, https://andypicke.github.io/emberr/},   url = {https://github.com/andypicke/emberr}, }"},{"path":"https://andypicke.github.io/emberr/index.html","id":"emberr","dir":"","previous_headings":"","what":"R API Wrapper For Ember Data","title":"R API Wrapper For Ember Data","text":"goal {emberr} provide functions query retrieve data Ember API. can view API documentation details. Please note license information provided Ember: *data published using CC--4.0 license. Anyone able use data purpose (personal, commercial, etc.). requirements license : Ember cited data source. E.g. ‘Monthly electricity generation data, Ember’ may add additional legal/technological restrictions data.* See blog post description examples package.","code":""},{"path":"https://andypicke.github.io/emberr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R API Wrapper For Ember Data","text":"can install development version emberr GitHub : need sign free API key Ember. package assumes stored API key .Renviron file EMBER_API_KEY. can also pass API key explicitly function.","code":"# install.packages(\"devtools\") devtools::install_github(\"andypicke/emberr\")"},{"path":"https://andypicke.github.io/emberr/index.html","id":"using-the-package","dir":"","previous_headings":"","what":"Using the package","title":"R API Wrapper For Ember Data","text":"main function retrieve dataset api get_ember_data(). 4 main datasets available API (correspond dataset option get_ember_data(): - electricity-generation - power-sector-emissions - electricity-demand - carbon-intensity dataset available yearly monthly resolution (temporal_resolution option get_ember_data()). Countries/regions contained entity variable.","code":""},{"path":"https://andypicke.github.io/emberr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"R API Wrapper For Ember Data","text":"Get monthly electricity generation data 2021-2023. Default returns data countries/regions (“entities”). series variable specifies fuel type: can specify single year instead min max date: get_ember_options() function can used return options varialbe. example, get options entity parameter: series parameter: Retrieve data just one country/region specifying entity: can also retrieve data multiple countries/regions (entities):","code":"library(emberr)  gen <- emberr::get_ember_data(dataset = \"electricity-generation\",                                temporal_resolution = \"monthly\",                                min_date = 2021,                                max_date = 2023)  head(gen) #>   entity entity_code is_aggregate_entity       date    series #> 1 Africa        <NA>                TRUE 2021-01-01 Bioenergy #> 2 Africa        <NA>                TRUE 2021-01-01     Clean #> 3 Africa        <NA>                TRUE 2021-01-01      Coal #> 4 Africa        <NA>                TRUE 2021-01-01    Demand #> 5 Africa        <NA>                TRUE 2021-01-01    Fossil #> 6 Africa        <NA>                TRUE 2021-01-01       Gas #>   is_aggregate_series generation_twh share_of_generation_pct #> 1               FALSE           0.11                    0.16 #> 2                TRUE          16.33                   24.11 #> 3               FALSE          20.04                   29.59 #> 4                TRUE          67.73                  100.00 #> 5                TRUE          51.40                   75.89 #> 6               FALSE          29.21                   43.13 unique(gen$series) #>  [1] \"Bioenergy\"                             #>  [2] \"Clean\"                                 #>  [3] \"Coal\"                                  #>  [4] \"Demand\"                                #>  [5] \"Fossil\"                                #>  [6] \"Gas\"                                   #>  [7] \"Hydro\"                                 #>  [8] \"Hydro, bioenergy and other renewables\" #>  [9] \"Nuclear\"                               #> [10] \"Other fossil\"                          #> [11] \"Other renewables\"                      #> [12] \"Renewables\"                            #> [13] \"Solar\"                                 #> [14] \"Total generation\"                      #> [15] \"Wind\"                                  #> [16] \"Wind and solar\"                        #> [17] \"Net imports\" gen_2023 <- emberr::get_ember_data(dataset = \"electricity-generation\",                                temporal_resolution = \"monthly\",                                year = 2023)  head(gen_2023) #>   entity entity_code is_aggregate_entity       date    series #> 1 Africa        <NA>                TRUE 2023-01-01 Bioenergy #> 2 Africa        <NA>                TRUE 2023-01-01     Clean #> 3 Africa        <NA>                TRUE 2023-01-01      Coal #> 4 Africa        <NA>                TRUE 2023-01-01    Demand #> 5 Africa        <NA>                TRUE 2023-01-01    Fossil #> 6 Africa        <NA>                TRUE 2023-01-01       Gas #>   is_aggregate_series generation_twh share_of_generation_pct #> 1               FALSE           0.23                    0.34 #> 2                TRUE          17.78                   26.08 #> 3               FALSE          17.16                   25.17 #> 4                TRUE          68.18                  100.00 #> 5                TRUE          50.40                   73.92 #> 6               FALSE          27.24                   39.95 options <- emberr::get_ember_options(dataset = \"electricity-generation\", filter_name = \"entity\")  str(options) #>  chr [1:228] \"ASEAN\" \"Afghanistan\" \"Africa\" \"Albania\" \"Algeria\" ... options_series <- emberr::get_ember_options(dataset = \"electricity-generation\", filter_name = \"series\")  options_series #>  [1] \"Bioenergy\"                             #>  [2] \"Clean\"                                 #>  [3] \"Coal\"                                  #>  [4] \"Demand\"                                #>  [5] \"Fossil\"                                #>  [6] \"Gas\"                                   #>  [7] \"Hydro\"                                 #>  [8] \"Hydro, bioenergy and other renewables\" #>  [9] \"Net imports\"                           #> [10] \"Nuclear\"                               #> [11] \"Other fossil\"                          #> [12] \"Other renewables\"                      #> [13] \"Renewables\"                            #> [14] \"Solar\"                                 #> [15] \"Total generation\"                      #> [16] \"Wind\"                                  #> [17] \"Wind and solar\" df_usa <- emberr::get_ember_data(entity = \"United States\")  str(df_usa) #> 'data.frame':    153 obs. of  8 variables: #>  $ entity                 : chr  \"United States\" \"United States\" \"United States\" \"United States\" ... #>  $ entity_code            : chr  \"USA\" \"USA\" \"USA\" \"USA\" ... #>  $ is_aggregate_entity    : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  $ date                   : chr  \"2015\" \"2015\" \"2015\" \"2015\" ... #>  $ series                 : chr  \"Bioenergy\" \"Clean\" \"Coal\" \"Demand\" ... #>  $ is_aggregate_series    : logi  FALSE TRUE FALSE TRUE TRUE FALSE ... #>  $ generation_twh         : num  63.6 1353.7 1352.4 4150.7 2730.3 ... #>  $ share_of_generation_pct: num  1.56 33.15 33.11 101.63 66.85 ... df <- get_ember_data(min_date = 2020, entity = \"United States,United Kingdom\") str(df) #> 'data.frame':    132 obs. of  8 variables: #>  $ entity                 : chr  \"United Kingdom\" \"United Kingdom\" \"United Kingdom\" \"United Kingdom\" ... #>  $ entity_code            : chr  \"GBR\" \"GBR\" \"GBR\" \"GBR\" ... #>  $ is_aggregate_entity    : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  $ date                   : chr  \"2020\" \"2020\" \"2020\" \"2020\" ... #>  $ series                 : chr  \"Bioenergy\" \"Clean\" \"Coal\" \"Demand\" ... #>  $ is_aggregate_series    : logi  FALSE TRUE FALSE TRUE TRUE FALSE ... #>  $ generation_twh         : num  39.53 184.8 5.49 333.15 130.1 ... #>  $ share_of_generation_pct: num  12.55 58.69 1.74 105.8 41.31 ..."},{"path":"https://andypicke.github.io/emberr/reference/construct_query_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct query URL for Ember data API — construct_query_url","title":"Construct query URL for Ember data API — construct_query_url","text":"Construct query URL Ember data API","code":""},{"path":"https://andypicke.github.io/emberr/reference/construct_query_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct query URL for Ember data API — construct_query_url","text":"","code":"construct_query_url(   endpoint = c(\"electricity-generation\", \"power-sector-emissions\", \"electricity-demand\",     \"carbon-intensity\"),   temporal_resolution = c(\"yearly\", \"monthly\"),   year = NA,   min_date = \"2015\",   max_date = \"2023\",   entity = \"all\",   api_key = Sys.getenv(\"EMBER_API_KEY\") )"},{"path":"https://andypicke.github.io/emberr/reference/construct_query_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct query URL for Ember data API — construct_query_url","text":"endpoint Default = \"electricity-generation\" temporal_resolution \"yearly\" (default) \"monthly\" year (optional) specified, retrieve data single year min_date Mininum date retrieve data . YYYY YYYY-MM format. Default=2015 max_date Maximum date retrieve data . YYYY YYYY-MM format. Default=2023 entity List comma-separated country(s) region(s) return data . Default (filter) api_key Default Sys.getenv(\"EMBER_API_KEY\")","code":""},{"path":"https://andypicke.github.io/emberr/reference/construct_query_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct query URL for Ember data API — construct_query_url","text":"query_url API query URL specified parameters","code":""},{"path":"https://andypicke.github.io/emberr/reference/emberr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"emberr: R API Wrapper For Ember Data — emberr-package","title":"emberr: R API Wrapper For Ember Data — emberr-package","text":"Provides R functions retrieve data Ember Climate API.","code":""},{"path":[]},{"path":"https://andypicke.github.io/emberr/reference/emberr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"emberr: R API Wrapper For Ember Data — emberr-package","text":"Maintainer: Andy Pickering andypicke@gmail.com (ORCID)","code":""},{"path":"https://andypicke.github.io/emberr/reference/get_api_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Make API GET request and return data — get_api_request","title":"Make API GET request and return data — get_api_request","text":"Make API GET request return data","code":""},{"path":"https://andypicke.github.io/emberr/reference/get_api_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make API GET request and return data — get_api_request","text":"","code":"get_api_request(query_url)"},{"path":"https://andypicke.github.io/emberr/reference/get_api_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make API GET request and return data — get_api_request","text":"query_url URL API query","code":""},{"path":"https://andypicke.github.io/emberr/reference/get_api_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make API GET request and return data — get_api_request","text":"data API response","code":""},{"path":"https://andypicke.github.io/emberr/reference/get_electricity_generation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Ember electricity-generation data from API — get_electricity_generation","title":"Get Ember electricity-generation data from API — get_electricity_generation","text":"Get Ember electricity-generation data API","code":""},{"path":"https://andypicke.github.io/emberr/reference/get_electricity_generation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Ember electricity-generation data from API — get_electricity_generation","text":"","code":"get_electricity_generation(   temporal_resolution = c(\"yearly\", \"monthly\"),   year = NA,   min_date = \"2015\",   max_date = \"2023\",   entity = \"all\",   api_key = Sys.getenv(\"EMBER_API_KEY\") )"},{"path":"https://andypicke.github.io/emberr/reference/get_electricity_generation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Ember electricity-generation data from API — get_electricity_generation","text":"temporal_resolution \"yearly\" (default) \"monthly\" year (optional) specified, retrieve data single year min_date Mininum date retrieve data . YYYY YYYY-MM format. Default=2015 max_date Maximum date retrieve data . YYYY YYYY-MM format. Default=2023 entity List comma-separated country(s) region(s) return data . Default (filter) api_key Default Sys.getenv(\"EMBER_API_KEY\")","code":""},{"path":"https://andypicke.github.io/emberr/reference/get_electricity_generation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Ember electricity-generation data from API — get_electricity_generation","text":"df Dataframe requested data","code":""},{"path":[]},{"path":"https://andypicke.github.io/emberr/reference/get_ember_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Ember-climate data from API — get_ember_data","title":"Get Ember-climate data from API — get_ember_data","text":"Get Ember-climate data API","code":""},{"path":"https://andypicke.github.io/emberr/reference/get_ember_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Ember-climate data from API — get_ember_data","text":"","code":"get_ember_data(   dataset = c(\"electricity-generation\", \"power-sector-emissions\", \"electricity-demand\",     \"carbon-intensity\"),   temporal_resolution = c(\"yearly\", \"monthly\"),   year = NA,   min_date = \"2015\",   max_date = \"2023\",   entity = \"all\",   api_key = Sys.getenv(\"EMBER_API_KEY\") )"},{"path":"https://andypicke.github.io/emberr/reference/get_ember_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Ember-climate data from API — get_ember_data","text":"dataset Dataset retrieve. Default = \"electricity-generation\". options \"power-sector-emissions\", \"electricity-demand\", \"carbon-intensity\" temporal_resolution \"yearly\" (default) \"monthly\" year (optional) specified, retrieve data single year min_date Minimum date retrieve data . YYYY YYYY-MM format. Default=2015 max_date Maximum date retrieve data . YYYY YYYY-MM format. Default=2023 entity List comma-separated country(s) region(s) return data . Default (filter) api_key Default Sys.getenv(\"EMBER_API_KEY\")","code":""},{"path":"https://andypicke.github.io/emberr/reference/get_ember_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Ember-climate data from API — get_ember_data","text":"df Dataframe requested data","code":""},{"path":[]},{"path":"https://andypicke.github.io/emberr/reference/get_ember_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Get API parameter options for Ember dataset — get_ember_options","title":"Get API parameter options for Ember dataset — get_ember_options","text":"Get API parameter options Ember dataset","code":""},{"path":"https://andypicke.github.io/emberr/reference/get_ember_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get API parameter options for Ember dataset — get_ember_options","text":"","code":"get_ember_options(   dataset = c(\"electricity-generation\", \"power-sector-emissions\", \"electricity-demand\",     \"carbon-intensity\"),   temporal_resolution = c(\"yearly\", \"monthly\"),   filter_name = \"entity\",   api_key = Sys.getenv(\"EMBER_API_KEY\") )"},{"path":"https://andypicke.github.io/emberr/reference/get_ember_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get API parameter options for Ember dataset — get_ember_options","text":"dataset Default=\"electricity-generation\" temporal_resolution default =\"yearly\" filter_name Parameter get options (ex: entity, series, date. Default = \"entity\") api_key Default Sys.getenv(\"EMBER_API_KEY\")","code":""},{"path":"https://andypicke.github.io/emberr/reference/get_ember_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get API parameter options for Ember dataset — get_ember_options","text":"options List options specified parameter","code":""}]
